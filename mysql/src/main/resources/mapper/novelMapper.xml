<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mysql.dao.NovelDAO">
    <resultMap id="BaseResultMap" type="com.mysql.model.NovelDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="book_name" property="bookName" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="last_update_chapter" property="lastUpdateChapter" jdbcType="VARCHAR"/>
        <result column="last_update_chapter_url" property="lastUpdateChapterUrl" jdbcType="VARCHAR"/>
        <result column="first_letter" property="firstLetter" jdbcType="CHAR"/>
        <result column="writing_state" property="writingState" jdbcType="INTEGER"/>
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="book_state" property="bookState" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, book_name, url, author, last_update_chapter, last_update_chapter_url, first_letter,
        writing_state, add_time, update_time, book_state,book_type
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>
        from novel
        where book_state=1 and id =#{id}
    </select>
    <select id="selectByQueryNovel" resultMap="BaseResultMap" parameterType="com.mysql.query.QueryNovel">
        select
        a.id, a.book_name, a.url, a.author, a.last_update_chapter, a.last_update_chapter_url,
        a.first_letter,a.writing_state, a.add_time, a.update_time, a.book_state,a.book_type
        from novel as a
        where true
        <if test="id != null">
            and a.id = #{id}
        </if>
        <if test="bookName != null">
            and a.book_name = #{bookName}
        </if>
        <if test="author != null and bookState == null">
            and a.author = #{author}
        </if>
        <if test="author !=null and bookState != null">
            and author=#{author}
            and a.book_state = #{bookState}
        </if>
    </select>

    <select id="selectLikeByAuthorOrTitle" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        id, book_name, url, author, last_update_chapter, last_update_chapter_url,
        first_letter,writing_state, add_time, update_time, book_state,book_type
        from novel where
        book_name like #{authorOrTitle}  or author like #{authorOrTitle}


    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from tbl_novel
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.mysql.model.NovelDO">
        insert into novel (book_name, url,
        author, last_update_chapter, last_update_chapter_url,
        first_letter, writing_state, add_time,
        update_time, book_state,book_type)
        values ( #{book_name}, #{url},
        #{author}, #{lastUpdateChapter}, #{lastUpdateChapterUrl},
        #{firstLetter}, #{writingState}, now(),
        #{updateTime}, #{bookState},#{bookType})
    </insert>
    <insert id="insertSelective" parameterType="com.mysql.model.NovelDO">
        insert into tbl_novel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="book_name != null">
                book_name,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="lastUpdateChapter != null">
                last_update_chapter,
            </if>
            <if test="lastUpdateChapterUrl != null">
                last_update_chapter_url,
            </if>
            <if test="firstLetter != null">
                first_letter,
            </if>
            <if test="writingState != null">
                writing_state,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="bookState != null">
                book_state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="book_name != null">
                #{book_name,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateChapter != null">
                #{lastUpdateChapter,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateChapterUrl != null">
                #{lastUpdateChapterUrl,jdbcType=VARCHAR},
            </if>
            <if test="firstLetter != null">
                #{firstLetter,jdbcType=CHAR},
            </if>
            <if test="writingState != null">
                #{writingState,jdbcType=INTEGER},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="bookState != null">
                #{bookState,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <!-- 批量插入 -->
    <insert id="batchInsert" parameterType="list">
        insert into tbl_novel
        (book_name, url, author, last_update_chapter, last_update_chapter_url,
        first_letter, writing_state, add_time,
        update_time, book_state)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.book_name,jdbcType=VARCHAR}, #{item.url,jdbcType=VARCHAR},
            #{item.author,jdbcType=VARCHAR}, #{item.lastUpdateChapter,jdbcType=VARCHAR},
            #{item.lastUpdateChapterUrl,jdbcType=VARCHAR},
            #{item.firstLetter,jdbcType=CHAR}, #{item.writingState,jdbcType=INTEGER},
            #{item.addTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP}, #{item.bookState,jdbcType=INTEGER})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.mysql.model.NovelDO">
        update tbl_novel
        <set>
            <if test="book_name != null">
                book_name = #{book_name,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateChapter != null">
                last_update_chapter = #{lastUpdateChapter,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateChapterUrl != null">
                last_update_chapter_url = #{lastUpdateChapterUrl,jdbcType=VARCHAR},
            </if>
            <if test="firstLetter != null">
                first_letter = #{firstLetter,jdbcType=CHAR},
            </if>
            <if test="writingState != null">
                writing_state = #{writingState,jdbcType=INTEGER},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="bookState != null">
                book_state = #{bookState,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mysql.model.NovelDO">
        update tbl_novel
        set book_name = #{book_name,jdbcType=VARCHAR},
        url = #{url,jdbcType=VARCHAR},
        author = #{author,jdbcType=VARCHAR},
        last_update_chapter = #{lastUpdateChapter,jdbcType=VARCHAR},
        last_update_chapter_url = #{lastUpdateChapterUrl,jdbcType=VARCHAR},
        first_letter = #{firstLetter,jdbcType=CHAR},
        writing_state = #{writingState,jdbcType=INTEGER},
        add_time = #{addTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        book_state = #{bookState,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>